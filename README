1. VIRTUALBOX practice
	1. Create a Fedora 36 VM using the hypervisor of your preference. I'll use VirtualBox in my examples.
	2. Log into the VM, if root, it is a best practice to create a user with sudo privileges, and disable root login:
		$ useradd <user>
		$ usermod -aG wheel <user>
		$ passwd <user>
		$ visudo (optional, be careful)
		$ su - <user>
	3. Update the system: 
		$ sudo dnf update
	4. Shutdown the system:
		$ sudo shutdown -h now
	5. Enable port forwarding for SSH access:
		1. Open VirtualBox and select your VM.
		2. Go to Settings -> Network -> Adapter 1 -> Advanced
		3. Verify:
			1. Attached to: NAT
			2. Adapter type: Intel PRO/1000 MT Desktop
			3. Cable connected: yes
		4. Go to Port Forwarding, and add a new record:
			1. Name: SSH
			2. Protocol: TCP
			3. Host IP: 127.0.0.1
			4. Host Port: 2222
			5. Guest IP: <leave blank>
			6. Guest Port: 22
		5. OK, OK.
	6. Turn on the VM
	7. Open the terminal of your preference and access your VM:
		$ ssh <user>@127.0.0.1 -p 2222
	
2. CVS practice
	1. Create a GitHub account: https://github.com/
	2. Go to Settings -> Developer settings -> Personal access tokens -> Generate new token
		1. Add a note and select the desired expiration
		2. Select full access for repo scope
		3. Generate token
	2. Inside your VM, install git and clone learning_purposes repo:
		$ sudo dnf install git
		$ git clone https://github.com/picta/learning_purposes.git
			* As it is a public repo, you can clone it without authentication.
	3. Setup identity using the same information as on your GitHub account:
		$  git config --global user.email "you@example.com"
		$  git config --global user.name "Your Name"
	4. Check your settings:
		$ git config --list
	5. Push a commit to the repo:
		$ cd learning_purposes
		$ touch name.lastname
		$ git add name.lastname
		$ git status
			*Check status
		$ git commit -m "Adding name.lastname"
		$ git status
			*Check status
		$ git push
			*Authenticate using user and access token generated previously

		* In case you want to undo last commit: $ git reset --soft HEAD~1
	6. Create your own repo and play with it

